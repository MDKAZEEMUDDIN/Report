In Acceleration period I have complited few of topics:-
1)Familiarize Visual Studio
->It is used for develop computer program,websites,Desktop Application,and Mobile Application
2)Feature of Visual Studio
->code Editor
->Debuger
->Designer
->Extensibility
->Other Tool
3) Tools like :-
*)open Browser Tab
*)object brower
4)Difrence between .Net and .Net core
5)Command line palette
The foremost necessary key combination to graps is ctrl+shift+p that brings up the command palette
6).Net Two components 
*)common Language  runtime(CLR)
*)class libray which includes code for all major areas of application development
7)compiled Vs interprited langauge 
8)Win forms:-This used for developing form based application which would run on end user machine
9)Basic codes of git
->how add a textfile 
->To find the branch name
->To take help configuration
->mkdirectory(makedirectory)
->How to add all textfiles
10)Functions
A function is a group of related instructions that performs a specific task.
->Types of Functions in C#:
->Basically, there are two types of Functions in C#. They are as follows:
*)Built-in Functions
*)User-Defined Functions
11)Call by Value and Call by Reference in C#
 ->In.NET Framework by default all the objects are called by value, not called by reference. 
 whether it is a Value Type Primitive data types like:- int, char, double, etc.or Reference Data Type :-class, interface, delegate, string, etc
they are by default going to be called by value.
12)Static and non static keyword
13)we override the Equals() method of the Object class inside the Customer class When overriding the Equals() method 
make sure the passed object is not null and can be cast to the type you are comparing 
When overriding Equals() you also need to override GetHashCode() otherwise you will get a compiler warning.
14)Convert.ToString and ToString Method 
Both these methods are used to convert a value to a string The difference is Convert.ToString() method handles null
and the ToString() doesn’t handle is null
15)Check and unchecked keywords
16)Stack and Heap memory
17)Boxing and Unboxing
Date:-29/9/22
Basics of opps
->class
-A class is a user-defined data type that represents both state and behavior The state represents the properties and behavior is the action that objects can performIn other words we can say that a class is the blueprint or plan or template that describes the details of an object  a class is a blueprint from which the individual objects are created. 
->object
 It is an instance of a class
 ->creating a  class and object
 ->Types of class 
 Date:-30/9/22
 ->cunstructor
 ->Types of constructor
 ->Static and non Static constructor
 ->Inheritence
 ->polymorphism
 3/10/22
 -> Basic program of Interface 
 ->Basic program of Inheritence
 4/10/22
 ->Abstract class and Abstract methods
 Abstract class :-
 A class under which we define abstract methods is called as abstract class and  we need to define a method inside a class and
 we cannot define the abstract methods directly anywhere we need to define the abstract method inside an abstract class only
 Abstarct methods:-A method without the body is known as Abstract Method and  the method contains  only  declaration of the method and
 the abstract method contains only the declaration no implementation
  -> partial class:-A class in which code can be written in two or more files is known as a partial class
  ->When working on thelarge projects splitting a class into separate files allows multiple programmers to work on it simultaneously
   When working with automatically generated source code the code can be added to the class without having to recreate the source file
  ->partial methods :-A partial class may contain a partial method
  ->we have created the Partial() using the partial keyword
 -> the implementation of a partial method is optinal
 ->the partial Partial() is invoked within the Public() but we don’t have the partial method implimentation
Static :-> we cannot create a object 
-> we can by class name 
->Extention:-
Extension methods must be defined only under the static class If you check our NewClass then you will see that the NewClass is a static class
The first parameter of an extension method is known as the binding parameter which should be the name of the class to which the method has to be bound and the binding parameter should be prefixed with this As here we are creating these extension methods to extend the functionality of OldClass so you can check the first parameter of all these methods are going to be OldClass which is also prefixed with this keyword
An extension method can have only one binding parameter and that should be defined in the first place on the paremeter list
6/10/22
->properties :-
*)getter and setter 
 Exception :-
Exception Handling is a procedure to handle the exception which occurred during the execution of a program
->Two types of Exception 
*)Compile type exception:-The error that occurs in a program at the time of compilation is known as a compilation error
*)Runtime Exception:-The errors which are occurred at the time of program execution are called runtime errors
-> try block:-The try keyword establishes a block in which we need to write the exception causing and its related statements
->catch block :-The catch block is used to catch the exception that is thrown from its corresponding try block
->finally block:-The keyword finally establishes a block that definitely executes the statements placed in it irrespective of whether any exception has occurred or not
syntax:-
try{
}
catch(Exception e){
}
->enum
{
//contains
}
7/10/22

Pawan presentaion :- Topics on class,object,Abstraction ,Interface,polymorphysm,Inheritence 10:30 to 11:30
Anshika presentaion :- Topics on Accesspicer :-public ,private ,protected,internal
Ramesh kumar session dout clarification  3:00 to 4:00

10/10/22

Today i have have attended the session at 11:00am to 12 by samanta p 
-> topics on class and object ,Encapsulation,polymorphysm
and some basics example
-> And I have attended the session at 12:30pm to 1:10 by Bhushan chandrashekar kolapkar
Topics on Attributes and Indexer
->Attributes:-attributes are classes that inherit from the Attribute base class. Any class that inherits from 
Attribute can be used as a sort of "tag" on other pieces of code For instance there is an attribute called ObsoleteAttribute
->Indexer:-Indexers allow instances of a class or struct to be indexed just like arrays 
The indexed value can be set or retrieved without explicitly specifying a type or instance member
Indexers resemble properties except that their accessors take parameters.
Presentaion session by :-Gokul topic on partial class
presentaion session by veneeth:-topics on class and objects 
different types of class 
presentation  sesion by Joyti :Exception handling


11/10/22
Today I gown throungh C# solid principle 
->Solid principle are the most design principle for object oriented software development
Types:-
*)single Responsibility:-A class can have only single Responsibilty
*)open/closed:-A class should  be open for extension and but closed for modification
*)Liskov substituion principle
*)Integrated segrigation principle 
*)Depending inversion principle 

12/10/22
->Today session taken by samanta p at 10:30am to 11:10am  and given the instruction about the project 
->The First taken given by samanta p 
->Declaring the data fields 
->The second task given by samanta p by to Initalize the constructor 
-> I have compited the two task 

13/10/22
->Today session taken by samanta p at 11:00am to 12:15pm to review our code which we have perform in the firt two task and 
->At 1:00pm to 2:20pm session taken by  samanta p and given the third task to declare the methods in the Bank project 
->At 4:00pm to 5:00 Afsal kc has taken the small session about github
-> I  have complited the  third task 

14/10/22
Today samanta has given the task to completd methods
->Bank.cs
1. public void AddCustomer(string firstName, string lastName)
Check if MAXCUSTOMER limit is reached display message else add new 
customer
2. public void GenerateReport()
Display Bank Name, and type of account of each customer and balance of 
each account
3. public Customer GetCustomer(string firstName, string lastName)
If the firstName and lastName match with the list of customer then return 
the customer details. Else return null
4. public override string ToString()
Return Bank Name and Number of customers
Customer.cs
1. public void AddAccount(Account account)
Check if MAXACCOUNT limit is reached display message else add new 
account
2. public List<Account> GetAccount()
return all accounts of the customer
3. public Account GetFirstTransferableAccount()
Return the first savings account of the customer from the list of accounts 
of the customer
->And the session was taken by Afsal kc to check the blocker and given the 5 task to complete the try and catch block exception




